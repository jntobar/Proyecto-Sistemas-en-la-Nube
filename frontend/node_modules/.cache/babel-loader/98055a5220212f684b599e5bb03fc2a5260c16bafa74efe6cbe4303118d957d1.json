{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnt\\\\Desktop\\\\Proyecto Sistemas en la nube\\\\frontend\\\\src\\\\components\\\\ResultsComponent.js\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Box, Table, TableContainer, TableHead, TableRow, TableCell, TableBody } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsComponent = ({\n  results\n}) => {\n  if (!results) return null;\n  const {\n    stats\n  } = results.attributes;\n\n  // Convert stats object into an array of objects for easier mapping\n  const statsArray = Object.entries(stats).map(([key, value]) => ({\n    category: key,\n    count: value\n  }));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: \"Analysis Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: statsArray.map((stat, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: stat.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: stat.count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultsComponent;\nexport default ResultsComponent;\nvar _c;\n$RefreshReg$(_c, \"ResultsComponent\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Box","Table","TableContainer","TableHead","TableRow","TableCell","TableBody","jsxDEV","_jsxDEV","ResultsComponent","results","stats","attributes","statsArray","Object","entries","map","key","value","category","count","sx","mt","children","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","align","stat","index","_c","$RefreshReg$"],"sources":["C:/Users/johnt/Desktop/Proyecto Sistemas en la nube/frontend/src/components/ResultsComponent.js"],"sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Box, Table, TableContainer, TableHead, TableRow, TableCell, TableBody } from '@mui/material';\r\n\r\nconst ResultsComponent = ({ results }) => {\r\n  if (!results) return null;\r\n\r\n  const { stats } = results.attributes;\r\n\r\n  // Convert stats object into an array of objects for easier mapping\r\n  const statsArray = Object.entries(stats).map(([key, value]) => ({ category: key, count: value }));\r\n\r\n  return (\r\n    <Box sx={{ mt: 4 }}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Analysis Results\r\n          </Typography>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Category</TableCell>\r\n                  <TableCell align=\"right\">Count</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {statsArray.map((stat, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell>{stat.category}</TableCell>\r\n                    <TableCell align=\"right\">{stat.count}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ResultsComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}